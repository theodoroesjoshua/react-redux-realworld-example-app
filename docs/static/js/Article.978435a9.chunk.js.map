{"version":3,"file":"static/js/Article.978435a9.chunk.js","mappings":"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","sources":["components/Article/ArticleActions.js","components/Article/NonAuthorArticleActions.js","components/Article/ArticleMeta.js","components/Article/index.js","components/Profile.js"],"sourcesContent":["import { Link, useParams, useNavigate } from 'react-router-dom';\r\nimport React, { memo } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { deleteArticle } from '../../reducers/common';\r\n\r\n/**\r\n * Show the actions to edit or delete an article\r\n *\r\n * @example\r\n * <ArticleActions />\r\n */\r\nfunction ArticleActions() {\r\n  const { slug } = useParams();\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  /**\r\n   * @type {React.MouseEventHandler}\r\n   */\r\n  const removeArticle = () => {\r\n    dispatch(deleteArticle(slug));\r\n    navigate('/');\r\n  };\r\n\r\n  return (\r\n    <span>\r\n      <Link to={`/editor/${slug}`} className=\"btn btn-outline-secondary btn-sm\">\r\n        <i className=\"ion-edit\"></i> Edit Article\r\n      </Link>\r\n\r\n      <button className=\"btn btn-outline-danger btn-sm\" onClick={removeArticle}>\r\n        <i className=\"ion-trash-a\"></i> Delete Article\r\n      </button>\r\n    </span>\r\n  );\r\n}\r\n\r\nexport default memo(ArticleActions);\r\n","import { useNavigate } from 'react-router-dom';\nimport React, { memo } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { FollowUserButton } from '../Profile';\nimport { favoriteArticle, unfavoriteArticle } from '../../reducers/articleList';\n\n/**\n * Favorite or unfavorite an article\n *\n * @param {Object} props\n * @param {String} props.article\n * @param {String} props.currentUser\n */\nexport function FavoriteArticleButton({ article, currentUser }) {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  let classes = 'btn btn-sm action-btn';\n  const textMessage = 'Favorite Article';\n\n  if (article.favorited) {\n    classes += ' btn-secondary';\n  } else {\n    classes += ' btn-outline-secondary';\n  }\n  const handleClick = () => {\n    if (!currentUser) {\n      navigate('/login');\n      return;\n    }\n    if (article.favorited) {\n      dispatch(unfavoriteArticle(article.slug));\n    } else {\n      dispatch(favoriteArticle(article.slug));\n    }\n  };\n\n  return (\n    <button className={classes} onClick={handleClick}>\n      <i className=\"ion-heart\" />\n      {textMessage} ({article.favoritesCount})\n    </button>\n  );\n}\n\n/**\n * Show the article actions for non authors\n * For non user, they will be redirected to the login page\n * @example\n * <NonAuthoerArticleActions />\n */\nfunction NonAuthoerArticleActions({ article, currentUser }) {\n  return (\n    <span>\n      <FollowUserButton\n        username={article.author.username}\n        following={article.author.following}\n      />\n      <FavoriteArticleButton article={article} currentUser={currentUser} />\n    </span>\n  );\n}\n\nexport default memo(NonAuthoerArticleActions);\n","import React, { memo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { selectUser } from '../../features/auth/authSlice';\n\nimport ArticleActions from './ArticleActions';\nimport NonAuthorArticleActions from './NonAuthorArticleActions';\n\n/**\n * Show information about the current article\n *\n * @example\n * <ArticleMeta />\n */\nfunction ArticleMeta() {\n  const currentUser = useSelector(selectUser);\n  const article = useSelector((state) => state.article.article);\n  const isAuthor = currentUser?.username === article?.author.username;\n\n  if (!article) return null;\n\n  return (\n    <div className=\"article-meta\">\n      <Link to={`/${article.author.username}`}>\n        <img\n          src={\n            article.author.image ??\n            'https://static.productionready.io/images/smiley-cyrus.jpg'\n          }\n          alt={article.author.username}\n        />\n      </Link>\n\n      <div className=\"info\">\n        <Link to={`/${article.author.username}`} className=\"author\">\n          {article.author.username}\n        </Link>\n\n        <time className=\"date\" dateTime={article.createdAt}>\n          {new Date(article.createdAt).toDateString()}\n        </time>\n      </div>\n\n      {isAuthor ? (\n        <ArticleActions />\n      ) : (\n        <NonAuthorArticleActions article={article} currentUser={currentUser} />\n      )}\n    </div>\n  );\n}\n\nexport default memo(ArticleMeta);\n","import React, { lazy, memo, Suspense, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router';\nimport snarkdown from 'snarkdown';\nimport xss from 'xss';\n\nimport TagsList from '../../features/tags/TagsList';\nimport { articlePageUnloaded, getArticle } from '../../reducers/article';\nimport ArticleMeta from './ArticleMeta';\nimport { Link } from 'react-router-dom';\n\nconst CommentSection = lazy(() =>\n  import(\n    /* webpackChunkName: \"CommentSection\", webpackPrefetch: true  */ '../../features/comments/CommentSection'\n  )\n);\n\n/**\n * Show one article with its comments\n *\n * @param {import('react-router-dom').RouteComponentProps<{ slug: string }>} props\n * @example\n * <Article />\n */\nfunction Article({ match }) {\n  const dispatch = useDispatch();\n  const article = useSelector((state) => state.article.article);\n  const inProgress = useSelector((state) => state.article.inProgress);\n  const { slug } = useParams();\n  const renderMarkdown = () => ({ __html: xss(snarkdown(article.body)) });\n\n  useEffect(() => {\n    const fetchArticle = dispatch(getArticle(slug));\n    return () => {\n      fetchArticle.abort();\n    };\n  }, [match]);\n\n  useEffect(() => () => dispatch(articlePageUnloaded()), []);\n\n  if (!article) {\n    return (\n      <div className=\"article-page\">\n        <div className=\"container page\">\n          <div className=\"row article-content\">\n            <div className=\"col-xs-12\">\n              {inProgress && <h1 role=\"alert\">Article is loading</h1>}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"article-page\">\n      <div className=\"banner\">\n        <div className=\"container\">\n          <h1>{article.title}</h1>\n          <ArticleMeta />\n        </div>\n      </div>\n\n      <div className=\"container page\">\n        <div className=\"row article-content\">\n          <div className=\"col-xs-12\">\n            <article dangerouslySetInnerHTML={renderMarkdown()} />\n\n            <TagsList tags={article.tagList} />\n          </div>\n        </div>\n\n        <hr />\n        <ArticleMeta />\n        <Suspense fallback={<p>Loading comments</p>}>\n          <CommentSection />\n        </Suspense>\n      </div>\n    </div>\n  );\n}\n\nexport default memo(Article);\n","import React, { memo, useEffect } from 'react';\nimport { Link, useNavigate, useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ArticleList from './ArticleList';\nimport {\n  getArticlesByAuthor,\n  getFavoriteArticles,\n} from '../reducers/articleList';\nimport {\n  follow,\n  unfollow,\n  getProfile,\n  profilePageUnloaded,\n} from '../reducers/profile';\nimport { selectUser } from '../features/auth/authSlice';\n\n/**\n * Go to profile settings\n *\n * @example\n * <EditProfileSettings />\n */\nfunction EditProfileSettings() {\n  return (\n    <Link\n      to=\"/settings\"\n      className=\"btn btn-sm btn-outline-secondary action-btn\"\n    >\n      <i className=\"ion-gear-a\" /> Edit Profile Settings\n    </Link>\n  );\n}\n\n/**\n * Follow or unfollow an user\n *\n * @param {Object} props\n * @param {String} props.username\n * @param {Boolean} props.following\n * @example\n * <FollowUserButton username=\"warren_boyd\" following />\n */\nexport function FollowUserButton({ username, following }) {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const currentUser = useSelector(selectUser);\n  let classes = 'btn btn-sm action-btn';\n  let textMessage;\n\n  if (following) {\n    classes += ' btn-secondary';\n    textMessage = `Unfollow ${username}`;\n  } else {\n    classes += ' btn-outline-secondary';\n    textMessage = `Follow ${username}`;\n  }\n\n  const handleClick = () => {\n    if (!currentUser) {\n      navigate('/login');\n      return;\n    }\n\n    if (following) {\n      dispatch(unfollow(username));\n    } else {\n      dispatch(follow(username));\n    }\n  };\n\n  return (\n    <button className={classes} onClick={handleClick}>\n      <i className=\"ion-plus-round\" />\n      &nbsp;\n      {textMessage}\n    </button>\n  );\n}\n\n/**\n * Show the profile of an user\n *\n * @param {Object} props\n * @param {Object} props.profile\n * @example\n * <UserInfo profile={{\n *      username: 'warren_boyd',\n *      email: 'warren.boyd@mailinator.com',\n *      image: 'https://static.productionready.io/images/smiley-cyrus.jpg',\n *      bio: null,\n *      following: false,\n *    }}\n * />\n */\nfunction UserInfo({ profile }) {\n  const currentUser = useSelector(selectUser);\n  const isCurrentUser = profile.username === currentUser?.username;\n\n  return (\n    <div className=\"user-info\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-xs-12 col-md-10 offset-md-1\">\n            <img\n              src={\n                profile.image ||\n                'https://static.productionready.io/images/smiley-cyrus.jpg'\n              }\n              className=\"user-img\"\n              alt={profile.username}\n            />\n            <h4>{profile.username}</h4>\n            <p>{profile.bio}</p>\n\n            {isCurrentUser ? (\n              <EditProfileSettings />\n            ) : (\n              <FollowUserButton\n                username={profile.username}\n                following={profile.following}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n/**\n * Profile's navigation\n *\n * @param {Object}  props\n * @param {String}  props.username\n * @param {Boolean} props.isFavorites\n * @example\n * <ProfileTabs username=\"warren_boyd\" isFavorites />\n */\nfunction ProfileTabs({ username, isFavorites }) {\n  return (\n    <div className=\"articles-toggle\">\n      <ul className=\"nav nav-pills outline-active\">\n        <li className=\"nav-item\">\n          <Link\n            className={isFavorites ? 'nav-link' : 'nav-link active'}\n            to={`/${username}`}\n          >\n            My Articles\n          </Link>\n        </li>\n\n        <li className=\"nav-item\">\n          <Link\n            className={isFavorites ? 'nav-link active' : 'nav-link'}\n            to={`/${username}/favorites`}\n          >\n            Favorited Articles\n          </Link>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\n/**\n * Profile screen component\n * @param {import('react-router-dom').RouteComponentProps<{ username: string }>} props\n * @example\n * <Profile />\n */\nfunction Profile({ location, isFavoritePage }) {\n  const dispatch = useDispatch();\n  const profile = useSelector((state) => state.profile);\n  const { username } = useParams();\n\n  useEffect(() => {\n    const fetchProfile = dispatch(getProfile(username));\n    const fetchArticles = dispatch(\n      isFavoritePage\n        ? getFavoriteArticles({ username })\n        : getArticlesByAuthor({ author: username })\n    );\n\n    return () => {\n      fetchProfile.abort();\n      fetchArticles.abort();\n    };\n  }, [username, isFavoritePage]);\n\n  useEffect(() => () => dispatch(profilePageUnloaded()), []);\n\n  if (!profile) {\n    return null;\n  }\n\n  return (\n    <div className=\"profile-page\">\n      <UserInfo profile={profile} />\n\n      <div className=\"container page\">\n        <div className=\"row\">\n          <div className=\"col-xs-12 col-md-10 offset-md-1\">\n            <ProfileTabs\n              username={profile.username}\n              isFavorites={isFavoritePage}\n            />\n\n            <ArticleList />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default memo(Profile);\n"],"names":["ArticleActions","slug","useParams","dispatch","useDispatch","navigate","useNavigate","to","className","onClick","deleteArticle","memo","FavoriteArticleButton","article","currentUser","classes","favorited","unfavoriteArticle","favoriteArticle","favoritesCount","NonAuthoerArticleActions","FollowUserButton","username","author","following","ArticleMeta","useSelector","selectUser","state","isAuthor","src","image","alt","dateTime","createdAt","Date","toDateString","NonAuthorArticleActions","CommentSection","lazy","Article","match","inProgress","useEffect","fetchArticle","getArticle","abort","articlePageUnloaded","title","dangerouslySetInnerHTML","__html","xss","snarkdown","body","TagsList","tags","tagList","Suspense","fallback","role","EditProfileSettings","textMessage","unfollow","follow","UserInfo","profile","isCurrentUser","bio","ProfileTabs","isFavorites","Profile","location","isFavoritePage","fetchProfile","getProfile","fetchArticles","getFavoriteArticles","getArticlesByAuthor","profilePageUnloaded"],"sourceRoot":""}